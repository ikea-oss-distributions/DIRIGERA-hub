From ce5f64e953226eb88bac96972d66e310b55191f4 Mon Sep 17 00:00:00 2001
From: Ronnie Olsson <ronnie.olsson@inter.ikea.com>
Date: Wed, 19 May 2021 14:08:07 +0200
Subject: [PATCH] [HSPP-4800] redo mac-fusing

Lock fuse after fusing, also fix issues with detection of previous
fused MAC:s.
---
 cmd/fuse.c                    |  4 +++-
 drivers/fastboot/fb_command.c | 38 +++++++++++++++++------------------
 include/command.h             |  1 +
 3 files changed, 23 insertions(+), 20 deletions(-)

diff --git a/cmd/fuse.c b/cmd/fuse.c
index e888e9faf9..c302dc103e 100644
--- a/cmd/fuse.c
+++ b/cmd/fuse.c
@@ -90,7 +90,9 @@ static int do_fuse(struct cmd_tbl *cmdtp, int flag, int argc,
 
 			printf(" %.8x", val);
 			if (!strcmp(op, "isempty") && val) {
-				printf("\n\n");
+				printf("Already fused\n");
+				return CMD_RET_FUSED;
+			} else if (!strcmp(op, "isempty")) {
 				return CMD_RET_SUCCESS;
 			}
 		}
diff --git a/drivers/fastboot/fb_command.c b/drivers/fastboot/fb_command.c
index 14ec8b1129..1749ad4083 100644
--- a/drivers/fastboot/fb_command.c
+++ b/drivers/fastboot/fb_command.c
@@ -529,29 +529,29 @@ static void oem_fusemac(char *cmd_parameter, char *response, int fuse_address)
 		return;
 	}
 
-	/* execute 'fuse isempty' command bank, fuse address and number of registers */
 	snprintf(cmdbuf, sizeof(cmdbuf), "fuse isempty %d %d 2",
-			 bank, fuse_address);
+			bank, fuse_address);
 	printf("Execute: %s\n", cmdbuf);
+
+	/* This is not an error, if fused then go back */
 	if (run_command(cmdbuf, 0))
-		fastboot_okay("Failed fuse fetch or fuse already programmed", response);
-	else {
-		memset(squashed_mac_ptr, 0, sizeof(squashed_mac));
-		cmd_copy = strdup(cmd_parameter);
-		if (!strncmp(cmd_copy, ":", 1))
-			cmd_copy++;
-		while ((token = strsep(&cmd_parameter, ":"))) {
-			*squashed_mac_ptr++ = strtoul(token, NULL, 16);
-		}
-		snprintf(cmdbuf, sizeof(cmdbuf), "fuse prog -y %d %d 0x%08x 0x%08x",
-					 bank, fuse_address, squashed_mac[0], squashed_mac[1]);
-		free(cmd_copy);
-		printf("Execute: %s\n", cmdbuf);
-		if (run_command(cmdbuf, 0))
-			fastboot_fail("Cannot fuse mac address", response);
-		else
-			fastboot_okay(NULL, response);
+		goto exit;
+
+	memset(squashed_mac_ptr, 0, sizeof(squashed_mac));
+	cmd_copy = strdup(cmd_parameter);
+	if (!strncmp(cmd_copy, ":", 1))
+		cmd_copy++;
+	while ((token = strsep(&cmd_parameter, ":"))) {
+		*squashed_mac_ptr++ = strtoul(token, NULL, 16);
 	}
+
+	if (fuse_word(fuse_address, squashed_mac[0]))
+		fastboot_fail("Cannot fuse mac address", response);
+	if (fuse_word(fuse_address + 1, squashed_mac[1]))
+		fastboot_fail("Cannot fuse mac address", response);
+
+exit:
+	fastboot_okay(NULL, response);
 }
 
 static void oem_fusefactory(char *cmd_parameter, char *response)
diff --git a/include/command.h b/include/command.h
index b9b5ec1afa..c5eb7ae0aa 100644
--- a/include/command.h
+++ b/include/command.h
@@ -170,6 +170,7 @@ extern int do_env_set_efi(struct cmd_tbl *cmdtp, int flag, int argc,
 enum command_ret_t {
 	CMD_RET_SUCCESS,	/* 0 = Success */
 	CMD_RET_FAILURE,	/* 1 = Failure */
+	CMD_RET_FUSED,		/* 2 = Fused */
 	CMD_RET_USAGE = -1,	/* Failure, please report 'usage' error */
 };
 
-- 
2.27.0
