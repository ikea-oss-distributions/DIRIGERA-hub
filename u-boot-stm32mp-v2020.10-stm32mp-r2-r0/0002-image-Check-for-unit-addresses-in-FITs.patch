From 774bd1240a58b25a04b8bcd28f9788f89882dfe7 Mon Sep 17 00:00:00 2001
From: Simon Glass <sjg@chromium.org>
Date: Mon, 15 Feb 2021 17:08:12 -0700
Subject: [PATCH 2/2] image: Check for unit addresses in FITs

Using unit addresses in a FIT is a security risk. Add a check for this
and disallow it.

CVE-2021-27138

Signed-off-by: Simon Glass <sjg@chromium.org>
Reported-by: Bruce Monroe <bruce.monroe@intel.com>
Reported-by: Arie Haenel <arie.haenel@intel.com>
Reported-by: Julien Lenoir <julien.lenoir@intel.com>
(cherry picked from commit 3f04db891a353f4b127ed57279279f851c6b4917)
---
 common/image-fit.c | 70 ++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 68 insertions(+), 2 deletions(-)

diff --git a/common/image-fit.c b/common/image-fit.c
index 38df0133f3..f30545f6e9 100644
--- a/common/image-fit.c
+++ b/common/image-fit.c
@@ -1544,6 +1544,34 @@ int fit_image_check_comp(const void *fit, int noffset, uint8_t comp)
 	return (comp == image_comp);
 }
 
+/**
+ * fdt_check_no_at() - Check for nodes whose names contain '@'
+ *
+ * This checks the parent node and all subnodes recursively
+ *
+ * @fit: FIT to check
+ * @parent: Parent node to check
+ * @return 0 if OK, -EADDRNOTAVAIL is a node has a name containing '@'
+ */
+static int fdt_check_no_at(const void *fit, int parent)
+{
+	const char *name;
+	int node;
+	int ret;
+
+	name = fdt_get_name(fit, parent, NULL);
+	if (!name || strchr(name, '@'))
+		return -EADDRNOTAVAIL;
+
+	fdt_for_each_subnode(node, fit, parent) {
+		ret = fdt_check_no_at(fit, node);
+		if (ret)
+			return ret;
+	}
+
+	return 0;
+}
+
 int fit_check_format(const void *fit, ulong size)
 {
 	int ret;
@@ -1555,7 +1583,39 @@ int fit_check_format(const void *fit, ulong size)
 			  ret);
 		return -ENOEXEC;
 	}
+#ifdef CONFIG_FIT_FULL_CHECK
+	/*
+	 * If we are not given the size, make do wtih calculating it.
+	 * This is not as secure, so we should consider a flag to
+	 * control this.
+	 */
+	if (size == IMAGE_SIZE_INVAL)
+		size = fdt_totalsize(fit);
+	ret = fdt_check_full(fit, size);
+	if (ret)
+		ret = -EINVAL;
 
+	/*
+	 * U-Boot stopped using unit addressed in 2017. Since libfdt
+	 * can match nodes ignoring any unit address, signature
+	 * verification can see the wrong node if one is inserted with
+	 * the same name as a valid node but with a unit address
+	 * attached. Protect against this by disallowing unit addresses.
+	 */
+#ifdef CONFIG_FIT_SIGNATURE
+	if (!ret) {
+		ret = fdt_check_no_at(fit, 0);
+		if (ret) {
+			log_debug("FIT check error %d\n", ret);
+			return ret;
+		}
+	}
+#endif /*CONFIG_FIT_SIGNATURE*/
+	if (ret) {
+		log_debug("FIT check error %d\n", ret);
+		return ret;
+	}
+#endif /* CONFIG_FIT_FULL_CHECK */
 	/* mandatory / node 'description' property */
 	if (!fdt_getprop(fit, 0, FIT_DESC_PROP, NULL)) {
 		log_debug("Wrong FIT format: no description\n");
@@ -1909,10 +1969,16 @@ int fit_image_load(bootm_headers_t *images, ulong addr,
 	printf("## Loading %s from FIT Image at %08lx ...\n", prop_name, addr);
 
 	bootstage_mark(bootstage_id + BOOTSTAGE_SUB_FORMAT);
-	if (fit_check_format(fit, IMAGE_SIZE_INVAL)) {
+	ret = fit_check_format(fit, IMAGE_SIZE_INVAL);
+	if (ret) {
+		printf("Bad FIT %s image format! (err=%d)\n", prop_name, ret);
+#if defined(CONFIG_FIT_SIGNATURE)
+		if (ret == -EADDRNOTAVAIL)
+			printf("Signature checking prevents use of unit addresses (@) in nodes\n");
+#endif
 		printf("Bad FIT %s image format!\n", prop_name);
 		bootstage_error(bootstage_id + BOOTSTAGE_SUB_FORMAT);
-		return -ENOEXEC;
+		return ret;
 	}
 	bootstage_mark(bootstage_id + BOOTSTAGE_SUB_FORMAT_OK);
 	if (fit_uname) {
-- 
2.27.0

